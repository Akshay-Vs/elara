#!/usr/bin/env sh
MSG_FILE="$1"
COMMIT_MSG="$(cat "$MSG_FILE")"

# Get type before colon (supports type(scope): or type:)
TYPE=$(echo "$COMMIT_MSG" | sed -E 's/^([a-z]+)(\([^)]+\))?:.*/\1/')

# Emoji map
get_emoji() {
  case "$1" in
    feat|feature) echo "" ;;
    fix) echo "" ;;
    docs|doc) echo "" ;;
    style) echo "" ;;
    refactor|refac) echo "" ;;
    perf|performance) echo "󱐋" ;;
    test|tests) echo "󰙨" ;;
    build) echo "" ;;
    ci) echo "󰖵" ;;
    chore) echo "" ;;
    revert) echo "" ;;
    init|initial) echo "" ;;
    release) echo "" ;;
    wip|WIP) echo "󰋊" ;;
    merge|Merge) echo "" ;;
    *) echo "" ;;
  esac
}

# Strip emoji for linting
CLEAN_MSG=$(echo "$COMMIT_MSG" | sed -E 's/^[^a-zA-Z0-9]* //')
echo "$CLEAN_MSG" > "$MSG_FILE"

# Run commitlint on the cleaned message
if pnpm dlx commitlint --edit "$MSG_FILE"; then
  EMOJI=$(get_emoji "$TYPE")
  # Prepend emoji after lint passes
  if [ -n "$EMOJI" ] && ! echo "$CLEAN_MSG" | grep -q "$EMOJI"; then
    echo "$EMOJI $CLEAN_MSG" > "$MSG_FILE"
  fi

  # Optional: fun ASCII and messages
  echo ""
  echo "✔ Commit accepted with emoji!"
else
  echo ""
  echo "✖ Commit rejected. Use: type(scope): brief summary"
  exit 1
fi
